
var datas = [23,3,43,12,78,2,90,4,1,101,8,413,5,2];

// 冒泡排序*****************************************************************************************************************************
function bubbleSort(numbers) {
  for (var i = 0 ; i < numbers.length ;i++) {
    for (var j = 0 ;j < numbers.length - i -1; j++) {
      if (numbers[j] > numbers[j+1]) {
        var temple = numbers[j+1];
        numbers[j+1] = numbers[j];
        numbers[j] = temple;
      }
    }
  }
  return numbers;

}

// 选择排序*****************************************************************************************************************************
function selectSort(numbers) {

}

// 插入排序*****************************************************************************************************************************
function insertSort(numbers) {

}

// 希尔排序*****************************************************************************************************************************
function shellSort(numbers) {

}

// 快速排序*****************************************************************************************************************************
function division(numbers, left, right) {

}

function quickSort(numbers,leftIndex,rightIndex) {

}

// 归并排序 *****************************************************************************************************************************
function mergeSort(numbers) {

}

// 桶排序 *****************************************************************************************************************************
function bucketSort(numbers,maxValue) {

  var buckets = [maxValue];
  var len = numbers.length;

  // 入箱
  for (var i= 0 ; i < len; i++) {
    var number = numbers[i];
    buckets[numbers] += 1;
  }
}

// 测试排序
console.log("元数据   :" + datas+ "\n");

var result;

var result = bubbleSort(datas);
// var result = selectSort(datas);
// var result = insertSort(datas);
// var result = shellSort(datas);
// result = quickSort(datas,0,datas.length - 1);
// result = mergeSort(datas);

console.log("排列结果 :" + datas);